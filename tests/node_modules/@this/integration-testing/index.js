// Copyright 2022-2024 the Bashy-lib Authors (Dan Bornstein et alia).
// SPDX-License-Identifier: Apache-2.0

export async function checkResponse(responsePromise, config) {
  const response = await responsePromise;

  console.log('### Metadata');
  console.log('');

  let anyErrors = false;

  if (response.status !== config.status) {
    console.log('* Status: got %s, expected %s', response.status, config.status);
    anyErrors = true;
  }

  if (response.statusText !== config.statusText) {
    console.log('* Status text: got %s, expected %s', response.statusText, config.statusText);
    anyErrors = true;
  }

  const gotHeaders = new Map(response.headers.entries());
  for (const [name, value] of Object.entries(config.headers)) {
    const got = gotHeaders.get(name);
    gotHeaders.delete(name);

    if (got === undefined) {
      console.log('* Header %s: missing', name);
      anyErrors = true;
    } else if (typeof value === 'string') {
      if (got !== value) {
        console.log('* Header %s', name);
        console.log('  * got %o', got);
        console.log('  * expected %o', value);
        anyErrors = true;
      }
    } else {
      if (!new RegExp(value).test(got)) {
        console.log('* Header %s', name);
        console.log('  * got %o', got);
        console.log('  * expected match %s', value.toString());
        anyErrors = true;
      }
    }
  }

  for (const [name, value] of gotHeaders.entries()) {
    console.log('* Header %s', name);
    console.log('  * got %o', value);
    console.log('  * unexpected');
    anyErrors = true;
  }

  if (!anyErrors) {
    console.log('* No problems.');
  }

  console.log('');
  console.log('### Body');
  console.log('');

  const gotBody = response.body ? await response.text() : null;
  const bodyCheck = config.body ?? null;

  const printBody = async () => {
    if (gotBody) {
      console.log('```\n%s```', await response.text());
    } else {
      console.log('(no body)');
    }
  };

  if (bodyCheck === null) {
    printBody();
  } else {
    if (!gotBody) {
      console.log('Missing body.');
    } else if (typeof bodyCheck === 'string') {
      if (gotBody !== bodyCheck) {
        console.log('Non-matching body.\n');
        await printBody();
      } else {
        console.log('Body is as expected.');
      }
    } else {
      if (!new RegExp(bodyCheck).test(gotBody)) {
        console.log('Non-matching body.\n');
        await printBody();
      } else {
        console.log('Body is as expected.');
      }
    }
  }
}
