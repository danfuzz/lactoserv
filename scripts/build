#!/bin/bash
#
# Copyright 2022 Dan Bornstein. All rights reserved.
# All code and assets are considered proprietary and unlicensed.

. "$(dirname "$(readlink -f "$0")")/lib/init.sh" || exit "$?"

#
# Argument parsing
#

function usage {
    print-usage $'
    Usage:

    ${name} [<opt> ...]
      Builds the project.

    --clean
      Do a clean build.
    --out=<dir>
      Directory where built output goes. Defaults to `out` directly under the
      main product directory.

    ${name} [--help | -h]
      Displays this message.
    '

    exit "$@"
}

# Want help?
opt-action --call='{ usage }' help/h

# Clean build?
opt-toggle --var=doClean clean

# Built output directory.
opt-value --var=outDir out

process-args "$@" || usage "$?"


#
# Helper functions
#

# Copies the example setup into the out directory.
function build-example-setup {
    progress-msg 'Copying example setup...'

    local destDir="${outDir}/etc/example-setup"

    rm -rf "${destDir}" || return "$?"
    mkdir -p "${destDir}" || return "$?"

    lib rsync-local "${etcDir}/example-setup/" "${destDir}"
}

# Sets up the output directory.
function set-up-out-dir {
    local extraOpts=()
    if (( doClean )); then
        extraOpts=(--remove)
    fi

    lib out-dir --progress \
        --out="${outDir}" --create --print "${extraOpts[@]}"
}


#
# Main script
#

progress-msg --enable

srcDir="$(base-dir)/src"
etcDir="$(base-dir)/etc"
outDir="$(set-up-out-dir)"

# Make sure there's a cert to use.
lib make-localhost-cert \
|| exit "$?"

build-example-setup \
|| exit "$?"

lib build-js-project --out="${outDir}" lactoserv \
|| exit "$?"

progress-msg
progress-msg 'Build complete!'
