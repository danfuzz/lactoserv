#!/bin/bash
#
# Copyright 2022-2023 the Bashy-lib Authors (Dan Bornstein et alia).
# SPDX-License-Identifier: Apache-2.0

. "$(dirname "$(readlink -f "$0")")/_init.sh" || exit "$?"


#
# Argument parsing
#

define-usage --with-help $'
    ${name} [<opt> ...]

    Deal with the build-output directory in various ways.

    --out=<dir>
      Directory where build-output goes. Defaults to `out` directly under the
      main product directory.
    ${stderr}

    Actions:

    --create
      Create the directory, if it doesn\'t already exist.
    --print
      Print the fully-resolved path of the directory. This is the default action,
      if no actions are explicitly requested.
    --remove
      Remove the directory. If both this and `--create` are specified, then the
      removal happens first.
'

# `--verbose` etc.
usual-stderr-args

# Build-output directory.
opt-value --var=outDir out

# Actions (see `usage`).
opt-toggle --var=doCreate create
opt-toggle --var=doPrint print
opt-toggle --var=doRemove remove

process-args "$@" || exit "$?"


#
# Main script
#

if [[ ${outDir} == '' ]]; then
    outDir="$(base-dir)/out"
elif [[ ! (${outDir} =~ ^/) ]]; then
    # Make it an absolute path.
    outDir="$(/bin/pwd -P)/${outDir}"
fi

if [[ -d "${outDir}" ]]; then
    # Resolve path eagerly, if the directory currently exists. (Won't be able to
    # do so after removal.)
    outDir="$(readlink -f -- "${outDir}")" \
    || exit "$?"
fi

if (( doCreate || doRemove )); then
    progress-msg "Build-output directory:"
else
    doPrint=1
fi

if (( doRemove )); then
    if [[ -d ${outDir} ]]; then
        progress-msg '  Removing...'
        rm -rf "${outDir}" \
        || exit "$?"
    else
        progress-msg '  Not removing; already gone.'
    fi
fi

if (( doCreate )); then
    if [[ -d ${outDir} ]]; then
        progress-msg '  Not creating; already exists.'
    else
        progress-msg '  Creating...'
        mkdir -p "${outDir}" \
        || exit "$?"

        # Resolve path; we know for sure it exists now.
        outDir="$(readlink -f -- "${outDir}")" \
        || exit "$?"
    fi
fi


if (( doCreate || doRemove )); then
    progress-msg "  ${outDir}"
fi

if (( doPrint )); then
    echo "${outDir}"
fi
