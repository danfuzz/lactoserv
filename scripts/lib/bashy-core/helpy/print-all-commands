#!/bin/bash
#
# Copyright 2022-2023 the Bashy-lib Authors (Dan Bornstein et alia).
# SPDX-License-Identifier: Apache-2.0

. "$(dirname "$(readlink -f "$0")")/_init.sh" || exit "$?"


#
# Argument parsing
#

define-usage $'
    ${name} [<opt> ...] [--] <command>

    Prints all the top-level commands.

    --units=<names>
      Space-separated list of simple names (not paths) of the units to search.
      Without this, all units are searched.
    --prefix=<string>
      Prefix each line of output with the given string.

    ${name} [--help | -h]

    Displays this message.
'

# Want help?
opt-action --call='{ usage; exit }' help/h

# Sublibraries to search.
opt-value --var=unitNames --filter='/^[-_.a-zA-Z0-9 ]+$/' units

# Prefix string.
opt-value --var=prefix prefix

process-args "$@" || usage --short


#
# Main script
#

# Split the unit list into words.
unitNames=(${unitNames})

if (( ${#unitNames[@]} == 0 )); then
    findArgs=(. -mindepth 2 -maxdepth 2)
else
    findArgs=("${unitNames[@]}" -mindepth 1 -maxdepth 1)
fi

baseDir="$(this-base-library-dir)"

# Get a list of all candidates. We check each for actual executability below.
cmds=($(
    cd "${baseDir}"
    find "${findArgs[@]}" \
        -name '[a-z]*' '(' -type f -o -type d ')'
)) \
|| exit "$?"

for c in "${cmds[@]}"; do
    if [[ -x "${baseDir}/${c}" ]]; then
        printf '%s%s\n' "${prefix}" "${c##*/}"
    fi
done \
| sort
