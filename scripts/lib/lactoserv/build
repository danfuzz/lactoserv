#!/bin/bash
#
# Copyright 2022-2023 the Lactoserv Authors (Dan Bornstein et alia).
# SPDX-License-Identifier: Apache-2.0

. "$(dirname "$(readlink -f "$0")")/_init.sh" || exit "$?"


#
# Argument parsing
#

define-usage --with-help $'
    ${name} [<opt> ...]

    Builds the project.

    --clean
      Do a clean build.
    --make-distro
      Create a distribution tarball.
    --out=<dir>
      Directory where built output goes. Defaults to `out` directly under the
      main product directory.
'

# Clean build?
opt-toggle --var=doClean clean

# Make a distribution tarball?
opt-toggle --var=doDistro make-distro

# Built output directory.
opt-value --var=outDir out

process-args "$@" || exit "$?"


#
# Build targets
#

# Target: `distro`
function target-distro {
    satisfy-target main \
    || return "$?"

    progress-msg 'Making distribution tarball...'

    lib buildy make-distro --out="${outDir}" "${outDir}/lactoserv"
}

# Target: `main`
function target-main {
    # Run in a subshell so that `env-minimize` has no lasting effect.
    (
        true \
        && env-minimize \
        && lib node-project build-main-module \
            --out="${outDir}" --modules-dirs="${srcDir}" lactoserv \
    )
}


#
# Main script
#

# Make a temporary directory, and arrange for its deletion upon exit.
tmpDir="$(lib tempy mkdir)" || exit "$?"
trap "rm -rf \"${tmpDir}\"" EXIT

include-lib buildy-help --tmp-dir="${tmpDir}"

outDir="$(set-up-out-dir --out="${outDir}" --clean="${doClean}")" || exit "$?"

srcDir="$(base-dir)/src"
etcDir="$(base-dir)/etc"

targets=(main)

if (( doDistro )); then
    targets+=(distro)
fi

satisfy-all-targets "${targets[@]}"
