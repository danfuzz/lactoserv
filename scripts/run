#!/bin/bash
#
# Copyright 2022 Dan Bornstein. All rights reserved.
# All code and assets are considered proprietary and unlicensed.

. "$(dirname "$(readlink -f "$0")")/lib/init.sh" || exit "$?"


#
# Argument parsing
#

function usage {
    print-usage $'
    Usage:

    ${name} [<opt> ...]
      Runs the product, building it first if necessary.

    --clean
      Do a clean build.
    --out=<dir>
      Directory where built output goes. Defaults to `out` directly under the
      main product directory.

    ${name} [--help | -h]
      Displays this message.
    '

    exit "$@"
}

# Want help?
opt-action --call='{ usage }' help/h

# Clean build?
opt-toggle --var=clean clean

# Built output directory.
opt-value --var=outDir out

process-args "$@" || usage "$?"


#
# Main script
#

progress-msg --enable

if [[ ${outDir} == '' ]]; then
    outDir="$(dirname "$(this-cmd-dir)")/out"
fi

outRun="${outDir}/bin/run"

buildCmd=(lib build --out="${outDir}")
doBuild=0
if (( clean )); then
    doBuild=1
    buildCmd+=(--clean)
elif [[ ! -x "${outRun}" ]]; then
    doBuild=1
fi

if (( doBuild )); then
    progress-msg 'Doing build...'
    "${buildCmd[@]}" || exit "$?"
    progress-msg
    progress-msg 'Running...'
    progress-msg
fi

exec "${outRun}"
